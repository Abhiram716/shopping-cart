name: Pull Request Preview

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install node-fetch@2
        run: npm install node-fetch@2

      - name: Install dependencies
        run: npm install

      - name: Check if pull request is closed
        id: check_pr
        run: echo "::set-output name=closed::$(echo ${GITHUB_EVENT_NAME} == 'pull_request' && echo ${GITHUB_EVENT_ACTION} == 'closed')"

      - name: Build React app
        run: npm run build
        if: steps.check_pr.outputs.closed != 'true'

      - name: Deploy preview
        uses: JamesIves/github-pages-deploy-action@4.1.3
        id: deploy_preview
        with:
          branch: gh-pages
          folder: build
        if: steps.check_pr.outputs.closed != 'true'

      - name: Debug - Preview URL
        run: |
          echo "Preview URL: ${{ steps.deploy_preview.outputs.url }}"

      - name: Debug - Pull Request Information
        run: |
          echo "Owner: ${{ github.repository_owner }}"
          echo "Repository: ${{ github.repository }}"
          echo "Pull Request Number: ${{ github.event.pull_request.number }}"

      - name: Debug - List Comments
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.payload.pull_request;

            const fetch = require('node-fetch');

            const apiUrl = `https://api.github.com/repos/${owner}/${repo}/issues/${number}/comments`;
            const options = {
              method: 'GET',
              headers: {
                Authorization: `Bearer ${process.env.GITHUB_TOKEN}`,
                'Content-Type': 'application/json',
              },
            };

            fetch(apiUrl, options)
              .then(response => response.json())
              .then(comments => {
                console.log(comments);
              });
